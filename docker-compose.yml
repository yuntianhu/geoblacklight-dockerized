# Build all images and run all containers
# `docker-compose -f docker-compose-local.yml up -d --build --force-recreate`

version: '3.8'
services:

  mysql:
    image: mysql:8.0
    restart: always
    env_file:
      - .env
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: "umass_geoblacklight_test"
      # So you don't have to use root, but you can if you like
      MYSQL_USER: ${MYSQL_USER}
      # You can use whatever password you like
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - ${MYSQL_PORT}
      # Where our data will be persisted
    volumes:
      - './db-data:/var/lib/mysql'
    networks:
      - gbl-network

  geoblacklight_web:
    image: geoblacklight
    build:
      context: ./
      dockerfile: Dockerfile
    env_file: .env
    tty: true
    ports:
      - "21800:3000"
    depends_on:
      - mysql
    networks:
      - gbl-network

  geoblacklight_tasks:
    image: geoblacklight
    env_file: .env
    entrypoint: ["sh", "-c"]
    command:
      - bin/db-wait.sh ${MYSQL_HOST}:${MYSQL_PORT} sh -c "bundle exec rails db:migrate && echo 'migrated' && bundle exec rake devise_guests:delete_old_guest_users[7] && echo 'deleted guests'"
    tty: true
    depends_on:
      - mysql
    networks:
      - gbl-network

  solr:
    image: solr:8.8
    ports:
      - 8983:8983
    command:
      - sh
      - "-c"
      - "solr-precreate geoblacklight /opt/solr/server/configsets/geoblacklightconf"
    volumes:
      - solr_home:/var/solr/data:cached
      - ./solr/conf:/opt/solr/server/configsets/geoblacklightconf
    networks:
      - gbl-network
      
# Create a custom docker network if it does not exist already
networks:
  gbl-network:
    name: gbl-network

volumes:
  solr_home:
